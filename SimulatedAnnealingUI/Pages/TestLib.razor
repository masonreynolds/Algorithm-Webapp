@page "/testlib"
@inject IJSRuntime JSRuntime;
<h1>Test Graph Library</h1><br/>

<div class="row">
  <div class="column">
        <EditForm Model="@position" OnValidSubmit="HandleValidPos">
        <DataAnnotationsValidator />
        <ValidationSummary />
            <h5>Enter the Locations's Name: </h5>
            <InputText id="name" @bind-Value="position.name" /><br /><br />

            <h5>Enter the Locations's Latitude(North is Negative): </h5>
            <InputNumber id="latitude" @bind-Value="position.lat" /><br /><br />

            <h5>Enter the Locations's Longitude(East is Negative): </h5>
            <InputNumber id="longitude" @bind-Value="position.lon" /><br /><br />

            <button type="submit">Submit</button>
            <button type="button" @onclick="clearPoses">Clear</button>
        </EditForm>
  </div>
  <div class="column" id="c2">
      <h5>Locations entered: </h5>
      <p id="locations" style="white-space: pre-wrap">None so far</p>
  </div>
</div>

<svg id='globe'></svg>

@code {
    private List<Position> poses;
    private Position position;
    protected override async Task OnInitializedAsync()
    {
        poses = new List<Position>();
        position = new Position();
        await JSRuntime.InvokeVoidAsync("setRendered", false);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await DisplayGlobe();
    }

    private async Task DisplayGlobe()
    {
        await JSRuntime.InvokeVoidAsync("createGlobe", poses);
    }

    private async Task DisplayLocations()
    {
        await JSRuntime.InvokeVoidAsync("displayLocations", poses);
    }

    private async Task HandleValidPos()
    {
        poses.Add(new Position(position.name, position.lat, position.lon));
        await DisplayLocations();
        await DisplayGlobe();
    }

    private async Task clearPoses()
    {
        poses.Clear();
        await DisplayLocations();
        await DisplayGlobe();
    }
}
